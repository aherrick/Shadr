name: release

on:
  workflow_dispatch:  # Allows you to manually trigger the workflow

env:
  APP_NAME_VERSION: Shadr_v1.${{ github.run_number }}

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'  # Specify the .NET version you are using

      - name: set app name version
        run: |
          $filePath = './Form1.cs'
          $token = '[[app-name-version]]'
          $replacementValue = '${{ env.APP_NAME_VERSION }}'
          (Get-Content -Path $filePath) -replace [regex]::Escape($token), $replacementValue | Set-Content -Path $filePath
        shell: pwsh

      - name: Build solution
        run: dotnet build --self-contained true -r win-x64 --configuration Release --output ./build_output ./Shadr.csproj

      - name: Archive build artifacts
        run: |
          mkdir -p output
          Compress-Archive -Path build_output/* -DestinationPath output/${{ env.APP_NAME_VERSION }}.zip
        shell: pwsh

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.APP_NAME_VERSION }}
          release_name: ${{ env.APP_NAME_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: output/${{ env.APP_NAME_VERSION }}.zip
          asset_name: ${{ env.APP_NAME_VERSION }}.zip
          asset_content_type: application/zip